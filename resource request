

#include <stdio.h>
#include<stdlib.h>
int max[100][100],alloc[100][100],avail[100],need[100][100],avail2[100];
int n,m;

void check();
void request();

int main()
{
    int i,j;
    printf("Enter no of processes\t");
    scanf("%d",&n);
    printf("Enter no of resources\t");
    scanf("%d",&m);
    printf("Enter allocation matrix\n");
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            scanf("%d",&alloc[i][j]);
        }
    }
    printf("Enter max matrix\n");
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            scanf("%d",&max[i][j]);
        }
    }
    printf("Enter available res \n");
    
    for(i=0;i<m;i++){
        scanf("%d",&avail[i]);
        avail2[i]=avail[i];
    }
    
    check();
    request();

    return 0;
}

void check(){
    int f[n],ind=0;
    int i,j;
    
    for(i=0;i<n;i++){
        f[i]=0;
    }
    
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            need[i][j]=max[i][j]-alloc[i][j];
        }
    }
    int ans[n];
    int k;
    
    for(k=0;k<n;k++){
        for(i=0;i<n;i++){
            if(f[i]==0){
                int flag=0;
                for(j=0;j<m;j++){
                    if(need[i][j]>avail[j]){
                        flag=1;
                        break;
                    }
                }
                if(flag==0){
                    ans[ind++]=i;
                    for(j=0;j<m;j++){
                        avail[j]+=alloc[i][j];
                    }
                    f[i]=1;
                }
            }
        }
    }
    
    int flag=1;
    for(i=0;i<n;i++){
        if(f[i]==0){
            flag=0;
            printf("UNSAFE STATE\n");
            break;
        }
    }
    if(flag==1){
        printf("Safe sequence : \t");
        for(i=0;i<n-1;i++)
            printf("P%d->",ans[i]);
        printf("P%d",ans[n-1]);
    }
}

void request(){
    
    printf("Do u wanna make a request ?");
    int c,i;
    scanf("%d",&c);
    if(c==1){
        int req[100];
        for(i=0;i<m;i++){
            avail[i]=avail2[i];
        }
        printf("Enter process id : ");
        int pid;
        scanf("%d",&pid);
        for(i=0;i<m;i++){
            printf("Res %d  ",i+1);
            scanf("%d",&req[i]);
        }
        for(i=0;i<m;i++){
            if(req[i]>need[pid][i]){
                printf("req>need\n");
                exit(0);
            }
        }
        for(i=0;i<m;i++){
            if(req[i]>avail[i]){
                printf("req>avail\n");
                exit(0);
            }
        }
        for(i=0;i<m;i++){
            avail[i]-=req[i];
            alloc[pid][i]+=req[i];
            need[pid][i]-=req[i];
        }
        check();
        
    }else{
        exit(0);
    }
    
}
